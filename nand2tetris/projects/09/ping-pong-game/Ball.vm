function Ball.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push constant 1
pop this 3
push constant 1
neg
pop this 4
push pointer 0
return
function Ball.getX 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getY 0
push argument 0
pop pointer 0
push this 1
return
function Ball.getVelocityX 0
push argument 0
pop pointer 0
push this 3
return
function Ball.getVelocityY 0
push argument 0
pop pointer 0
push this 4
return
function Ball.getRadius 0
push argument 0
pop pointer 0
push this 2
return
function Ball.negateVelocityX 0
push argument 0
pop pointer 0
push this 3
neg
pop this 3
push constant 0
return
function Ball.negateVelocityY 0
push argument 0
pop pointer 0
push this 4
neg
pop this 4
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.move 1
push argument 0
pop pointer 0
push pointer 0
call Ball.erase 1
pop temp 0
push this 3
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push this 0
push this 3
add
call Math.max 2
pop this 0
goto IF_END0
label IF_FALSE0
push constant 511
push this 2
sub
push this 0
push this 3
add
call Math.min 2
pop this 0
label IF_END0
push this 4
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push this 1
push this 4
add
call Math.max 2
pop this 1
goto IF_END1
label IF_FALSE1
push constant 255
push this 2
sub
push this 1
push this 4
add
call Math.min 2
pop this 1
label IF_END1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.increaseVelocity 0
push argument 0
pop pointer 0
push this 3
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push argument 1
sub
pop this 3
goto IF_END0
label IF_FALSE0
push this 3
push argument 1
add
pop this 3
label IF_END0
push this 4
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
push argument 1
sub
pop this 4
goto IF_END1
label IF_FALSE1
push this 4
push argument 1
add
pop this 4
label IF_END1
push constant 0
return
